/* maximum number of array dimensions supported */
#define MAX_DIMS 4

/* Error codes generated by the library */
typedef enum
{
    ERR_NONE = 0,
    ERR_MEMORY,
    ERR_VALUE
} ERROR_CODES;

/* global variables defined in mxarr.c file */
extern ERROR_CODES ERROR_CODE;
extern char ERROR_STRING[256];

/* data types supported by the array library */
typedef enum
{
    UCHAR_TYPE = 8,
    CHAR_TYPE = 9,
    SHORT_TYPE = 11,
    INT_TYPE = 12,
    FLOAT_TYPE = 13,
    DOUBLE_TYPE = 14,
} ELEMENT_TYPES;

/* macro to compute the number of bytes of storage used by each of the above element types */
#define ELEMENT_SIZE(x) (1 << ((x - 8) / 2))

/******************************************************************************/
/* C structures (used as classes) */
/******************************************************************************/
/* structure for array objects */
typedef struct
{
    unsigned char dimno;   /* number of dimensions in use */
    ELEMENT_TYPES type;     /* data type stored in array */
    uint32_t dims[MAX_DIMS]; /* array containing the number of elements per dimension */
    unsigned int elno;      /* total number of elements; equal to product of dims in use */
    unsigned char *data;    /* pointer to the data */
} Array;
